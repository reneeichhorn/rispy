## Sample application
##
## Implements a simple sorting stream
##
## Accepts simple integers, should print 1 1 2 3 4 6 8


namespace:
  util/smallest-number:
    type: object
    initialValue:
      smallestValue:
        type: "null"

importFlows:
  - name: application-start
    from: core/application-start
  - name: stdout
    from: core/terminal/stdout


ownFlows:
  util/smallest-number/smallest:
    accepts:
      - type: stream
        outputs:
          - type: number
    outputs:
      - type: number

  util/smallest-number/sorting:
    accepts:
      - type: stream
        outputs:
          - type: number
    outputs:
      - type: number

flowDefinition:
  # Sort constant numbers and print them immediately into stdout
  application-start:
    outputs:
      - type: intoStream
        stream: util/smallest-number/sorting
        converter:
          type: value
          value:
            type: stream
            values:
              - type: number
                value: 4
              - type: number
                value: 1
              - type: number
                value: 2
              - type: number
                value: 8
              - type: number
                value: 3
              - type: number
                value: 6
              - type: number
                value: 1
              - type: number
                value: 4
              - type: number
                value: 1
              - type: number
                value: 2
              - type: number
                value: 8
              - type: number
                value: 3
              - type: number
                value: 6
              - type: number
                value: 1
        links:
          - to: util/smallest-number/sorting
            outputs:
              - type: intoStream
                stream: stdout
                converter:
                  type: stream
                  stream: core/converter/number/toString

  # Finding out what the smallest number is in a stream
  util/smallest-number/smallest:
    outputs:
      - type: mergeIntoSubstream
        object: util/smallest-number
        outputs:
          - type: condition
            condition:
              type: eq
              left:
                type: accessor
                expression:
                  type: object
                  name: util/smallest-number
                  expression:
                    type: object
                    name: smallestValue
                    expression:
                      type: value
              right:
                type: "null"
            outputs:
              - type: mutator
                expression:
                  type: object
                  name: util/smallest-number
                  expression:
                    type: object
                    name: smallestValue
                    expression:
                      type: value
                value:
                  type: accessor
                  expression:
                    type: stream
            elseOutputs:
              - type: condition
                condition:
                  type: lt
                  left:
                    type: accessor
                    expression:
                      type: object
                      name: util/smallest-number
                      expression:
                        type: object
                        name: smallestValue
                        expression:
                          type: value
                  right:
                    type: accessor
                    expression:
                      type: stream
                outputs:
                  - type: intoStreamOutput
                    stream: util/smallest-number/smallest/rejected
                    converter:
                      type: value
                      value:
                        type: accessor
                        expression:
                          type: object
                          name: util/smallest-number
                          expression:
                            type: object
                            name: smallestValue
                            expression:
                              type: value
                  - type: mutator
                    expression:
                      type: object
                      name: util/smallest-number
                      expression:
                        type: object
                        name: smallestValue
                        expression:
                          type: value
                    value:
                      type: accessor
                      expression:
                        type: stream
                elseOutputs:
                  - type: intoStreamOutput
                    stream: util/smallest-number/smallest/rejected
              - type: ends
                outputs:
                  - type: intoStreamOutput
                    stream: util/smallest-number/smallest
                    converter:
                      type: value
                      value:
                        type: accessor
                        expression:
                          type: object
                          name: util/smallest-number
                          expression:
                            type: object
                            name: smallestValue
                            expression:
                              type: value
  # Sort numbers ascending
  util/smallest-number/sorting:
    outputs:
      - type: intoStream
        stream: util/smallest-number/smallest
        links:
          - to: util/smallest-number/smallest
            outputs:
              - type: intoStreamOutput
                stream: util/smallest-number/sorting
          - to: util/smallest-number/smallest/rejected
            outputs:
              - type: capture
                outputs:
                - type: intoStream
                  stream: util/smallest-number/sorting
